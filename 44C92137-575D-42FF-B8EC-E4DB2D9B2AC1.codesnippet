<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>showAlert</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//
//  ShowAlert.swift
//  Hosee
//
//  Created by Duc Anh on 4/11/19.
//  Copyright Â© 2019 Minh Thang. All rights reserved.
//

import UIKit

func showAlertToOpenAppSetting(viewController: UIViewController? = nil,
title: String, message: String) -&gt; UIAlertController {
    return showAlertCompelete(viewController: viewController,
    title: title,
    message: message,
    settingUrl: UIApplication.openSettingsURLString)
}

func showCustomAlert(viewController: UIViewController? = nil,
title: String,
message: String,
okTitle: String,
cancleTitle: String? = nil,
okHandle: (() -&gt; Void)? = nil,
cancleHandle: (() -&gt; Void)? = nil) -&gt; UIAlertController {
    let alertController = UIAlertController(title: title, message: message, preferredStyle: UIAlertController.Style.alert)
    let okAction = UIAlertAction(title: okTitle, style: .default, handler: { (_) in
        okHandle?()
    })
    alertController.addAction(okAction)
    if let cancleTitle = cancleTitle {
        let cancelAction = UIAlertAction(title: cancleTitle, style: .cancel, handler: { (_) in
            cancleHandle?()
        })
        alertController.addAction(cancelAction)
    }
    if let viewController = viewController {
        viewController.present(alertController, animated: true, completion: nil)
    } else {
        UIApplication.shared.keyWindow?.rootViewController?.present(alertController, animated: true, completion: nil)
    }
    return alertController
}

func showAlert(viewController: UIViewController? = nil,
title: String,
message: String,
completeHandler: (() -&gt; Void)? = nil) -&gt; UIAlertController {
    let alertController = UIAlertController(title: title, message: message, preferredStyle: UIAlertController.Style.alert)
    let okAction = UIAlertAction(title: "OK", style: UIAlertAction.Style.cancel) { (result: UIAlertAction) -&gt; Void in
        completeHandler?()
    }
    alertController.addAction(okAction)
    if let viewController = viewController {
        viewController.present(alertController, animated: true, completion: nil)
    } else {
        UIApplication.shared.keyWindow?.rootViewController?.present(alertController, animated: true, completion: nil)
    }
    
    return alertController
}

func showAlertCompelete(viewController: UIViewController? = nil,
title: String,
message: String,
settingUrl: String) -&gt; UIAlertController {
    
    let alertController = UIAlertController(title: title, message: message, preferredStyle: UIAlertController.Style.alert)
    let settingAction = UIAlertAction(title: "Setting", style: .cancel) { (_) -&gt; Void in
        guard let settingsUrl = URL(string: settingUrl) else {
            return
        }
        if UIApplication.shared.canOpenURL(settingsUrl) {
            if #available(iOS 10.0, *) {
            UIApplication.shared.open(settingsUrl, completionHandler: nil)
        } else {
            UIApplication.shared.openURL(settingsUrl)
        }
    }
}
let okAction = UIAlertAction(title: "Cancel", style: UIAlertAction.Style.default) { (result: UIAlertAction) -&gt; Void in
}
alertController.addAction(okAction)
alertController.addAction(settingAction)
if let viewController = viewController {
    viewController.present(alertController, animated: true, completion: nil)
} else {
    UIApplication.shared.keyWindow?.rootViewController?.present(alertController, animated: true, completion: nil)
}
return alertController
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>44C92137-575D-42FF-B8EC-E4DB2D9B2AC1</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>Swift 4.2: Show Alert</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
